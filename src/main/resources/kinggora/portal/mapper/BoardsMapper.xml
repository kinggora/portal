<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kinggora.portal.mapper.BoardsMapper">
    <resultMap id="Post" type="Post">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="hit" column="hit"/>
        <result property="regDate" column="reg_date"/>
        <result property="modDate" column="mod_date"/>
        <result property="parent" column="parent"/>
        <result property="deleted" column="del_flag"/>
        <association property="boardInfo" javaType="BoardInfo" columnPrefix="bi_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="subject" column="subject"/>
            <result property="accessList" column="access_list"/>
            <result property="accessWrite" column="access_write"/>
            <result property="accessRead" column="access_read"/>
            <result property="accessReplyRead" column="access_reply_read"/>
            <result property="accessReplyWrite" column="access_reply_write"/>
            <result property="accessComment" column="access_comment"/>
            <result property="accessFile" column="access_file"/>
            <result property="boardType" column="board_type"/>
        </association>
        <association property="member" javaType="Member" columnPrefix="m_">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="name" column="name"/>
            <result property="roles" column="roles" typeHandler="MemberRolesTypeHandler"/>
        </association>
        <association property="category" javaType="Category" columnPrefix="c_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <resultMap id="CommonPost" type="CommonPost" extends="Post">
        <result property="countComment" column="count_comment"/>
        <association property="fileInfo" javaType="FileInfo">
            <result property="attached" column="attached"/>
            <result property="imaged" column="imaged"/>
            <result property="thumbUrl" column="thumb_url"/>
        </association>
    </resultMap>
    <resultMap id="QnaPost" type="QnaPost" extends="Post">
        <result property="existsChild" column="existsChild"/>
    </resultMap>

    <insert id="savePost" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO boards(
        member_id
        , board_id
        , category_id
        , title
        , content
        , parent
        , reg_date
        , hit
        , del_flag
        )
        VALUES(
        #{member.id}
        , #{boardInfo.id}
        , #{category.id}
        , #{title}
        , #{content}
        , #{parent}
        , NOW()
        , 0
        , false
        )
    </insert>

    <select id="findPostById" parameterType="int" resultMap="Post">
        SELECT
        b.id
        , b.title
        , b.content
        , b.reg_date
        , b.mod_date
        , b.hit
        , b.del_flag
        , bi.id AS bi_id
        , bi.name AS bi_name
        , bi.subject AS bi_subject
        , bi.access_list AS bi_access_list
        , bi.access_write AS bi_access_write
        , bi.access_read AS bi_access_read
        , bi.access_reply_read AS bi_access_reply_read
        , bi.access_reply_write AS bi_access_reply_write
        , bi.access_comment AS bi_access_comment
        , bi.access_file AS bi_access_file
        , bi.board_type AS bi_board_type
        , c.id AS c_id
        , c.name AS c_name
        , m.id AS m_id
        , m.username AS m_username
        , m.name AS m_name
        , m.roles AS m_roles
        FROM boards b, member m, category c, board_info bi
        WHERE b.id=#{id} and b.member_id=m.id and b.category_id=c.id AND b.board_id=bi.id
    </select>

    <select id="findPostByFileId" parameterType="int" resultMap="Post">
        SELECT
        b.id
        , b.title
        , b.content
        , b.reg_date
        , b.mod_date
        , b.hit
        , b.del_flag
        , m.id AS m_id
        , m.username AS m_username
        , m.name AS m_name
        , m.roles AS m_roles
        FROM member m, boards b
        JOIN file f
        ON f.post_id=b.id
        WHERE f.id=#{fileId} and b.member_id=m.id
    </select>

    <update id="hitUp" parameterType="int">
        UPDATE boards SET hit=hit+1 WHERE id=#{id}
    </update>

    <update id="updatePost" parameterType="Post">
        UPDATE boards
        SET title=#{title}, content=#{content}, category_id=#{category.id}, mod_date=NOW()
        WHERE id=#{id}
    </update>

    <delete id="deletePostById" parameterType="int">
        UPDATE boards
        SET del_flag=true, mod_date=NOW()
        WHERE id=#{id} AND del_flag=false
    </delete>

    <select id="findCommonPosts" parameterType="map" resultMap="CommonPost">
        SELECT
        b.id
        , b.title
        , b.reg_date
        , b.mod_date
        , b.hit
        , b.board_id AS bi_id
        , c.id AS c_id
        , c.name AS c_name
        , m.id AS m_id
        , m.username AS m_username
        , m.name AS m_name
        , m.roles AS m_roles
        , (SELECT EXISTS (SELECT id FROM file f WHERE b.id=f.post_id AND f.del_flag=false AND f.type='A' LIMIT 1)) AS
        attached
        , (SELECT EXISTS (SELECT id FROM file f WHERE b.id=f.post_id AND f.del_flag=false AND f.type='C' LIMIT 1)) AS
        imaged
        , (SELECT store_dir FROM file f WHERE b.id=f.post_id AND f.del_flag=false AND f.type='T' LIMIT 1) AS thumb_url
        , (SELECT COUNT(id) FROM comment cm WHERE b.id=cm.post_id) AS count_comment
        FROM boards b, member m, category c
        WHERE b.member_id=m.id and b.category_id=c.id AND b.del_flag=false
        <if test="criteria.boardId != null">
            AND b.board_id=#{criteria.boardId}
        </if>
        <if test="criteria.categoryId != null">
            AND b.category_id=#{criteria.categoryId}
        </if>
        <if test="criteria.searchWord != null and criteria.searchWord != ''">
            AND (b.title LIKE '%${criteria.searchWord}%'
            OR b.content LIKE '%${criteria.searchWord}%')
        </if>
        <choose>
            <when test="(criteria.startDate != null and criteria.startDate != '') and (criteria.endDate != null and criteria.endDate != '')">
                AND (b.reg_date BETWEEN #{criteria.startDate} AND #{criteria.endDate})
            </when>
            <when test="(criteria.startDate != null and criteria.startDate != '') and (criteria.endDate == null or criteria.endDate == '')">
                AND b.reg_date &gt;= #{criteria.startDate}
            </when>
            <when test="(criteria.startDate == null or criteria.startDate == '') and (criteria.endDate != null and criteria.endDate != '')">
                AND b.reg_date &lt;= #{criteria.endDate}
            </when>
        </choose>
        ORDER BY b.reg_date DESC
        LIMIT #{offset},#{limit}
    </select>

    <select id="findPostsCount" parameterType="SearchCriteria" resultType="int">
        SELECT COUNT(id)
        FROM boards
        WHERE del_flag=false AND parent IS NULL
        <if test="boardId != null">
            AND board_id=#{boardId}
        </if>
        <if test="categoryId != null">
            AND category_id=#{categoryId}
        </if>
        <if test="searchWord != null and searchWord != ''">
            AND (title LIKE '%${searchWord}%'
            OR content LIKE '%${searchWord}%')
        </if>
        <choose>
            <when test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
                AND reg_date BETWEEN #{startDate} AND #{endDate}
            </when>
            <when test="(startDate != null and startDate != '') and (endDate == null or endDate == '')">
                AND reg_date &gt;= #{startDate}
            </when>
            <when test="(startDate == null or startDate == '') and (endDate != null and endDate != '')">
                AND reg_date &lt;= #{endDate}
            </when>
        </choose>
    </select>

    <select id="childExists" parameterType="int" resultType="boolean">
        SELECT EXISTS (SELECT id FROM boards WHERE parent=#{id} AND del_flag=false LIMIT 1)
    </select>

    <select id="findQnaPosts" parameterType="map" resultMap="QnaPost">
        SELECT
        b.id
        , b.title
        , b.reg_date
        , b.mod_date
        , b.hit
        , b.board_id AS bi_id
        , c.id AS c_id
        , c.name AS c_name
        , m.id AS m_id
        , m.username AS m_username
        , m.name AS m_name
        , m.roles AS m_roles
        , (SELECT EXISTS (SELECT id FROM boards a WHERE a.parent=b.id LIMIT 1)) AS existsChild
        FROM boards b, member m, category c
        WHERE b.member_id=m.id and b.category_id=c.id AND b.del_flag=false AND b.parent IS NULL
        <if test="criteria.boardId != null">
            AND b.board_id=#{criteria.boardId}
        </if>
        <if test="criteria.categoryId != null">
            AND b.category_id=#{criteria.categoryId}
        </if>
        <if test="criteria.searchWord != null">
            AND b.title LIKE '%${criteria.searchWord}%'
        </if>
        <choose>
            <when test="(criteria.startDate != null and criteria.startDate != '') and (criteria.endDate != null and criteria.endDate != '')">
                AND (b.reg_date BETWEEN #{criteria.startDate} AND #{criteria.endDate})
            </when>
            <when test="(criteria.startDate != null and criteria.startDate != '') and (criteria.endDate == null or criteria.endDate == '')">
                AND b.reg_date &gt;= #{criteria.startDate}
            </when>
            <when test="(criteria.startDate == null or criteria.startDate == '') and (criteria.endDate != null and criteria.endDate != '')">
                AND b.reg_date &lt;= #{criteria.endDate}
            </when>
        </choose>
        ORDER BY b.reg_date DESC
        LIMIT #{offset},#{limit}
    </select>

    <select id="findChildPosts" parameterType="int" resultMap="Post">
        SELECT
        b.id
        , b.title
        , b.content
        , b.reg_date
        , b.mod_date
        , b.hit
        , b.parent
        , bi.id AS bi_id
        , bi.name AS bi_name
        , bi.subject AS bi_subject
        , c.id AS c_id
        , c.name AS c_name
        , m.id AS m_id
        , m.username AS m_username
        , m.name AS m_name
        , m.roles AS m_roles
        FROM boards b, member m, category c, board_info bi
        WHERE b.member_id=m.id and b.category_id=c.id AND b.board_id=bi.id
        AND b.parent=#{id} AND b.del_flag=false
    </select>

    <select id="existById" parameterType="int" resultType="boolean">
        SELECT EXISTS (
        SELECT id
        FROM boards
        WHERE id=#{id} AND del_flag=false
        )
    </select>

</mapper>
